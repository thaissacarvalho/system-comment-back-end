generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  username  String    @unique
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  posts     Post[]
  likes     Like[]
  deslikes  Deslike[]
}

model Post {
  id        Int       @id @default(autoincrement())
  authorId  Int       @unique
  title     String
  text      String?
  createdAt DateTime  @default(now())
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]
  likes     Like[]
  deslikes  Deslike[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  text      String?
  createdAt DateTime  @default(now())
  Post      Post?     @relation(fields: [postId], references: [id])
  postId    Int?
  parentId  Int?
  parent    Comment?  @relation("CommentToParent", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentToParent")
  Like      Like?
  Deslike   Deslike?
}

model Like {
  id        Int      @id @default(autoincrement())
  Comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int      @unique
  createdAt DateTime @default(now())
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Deslike {
  id        Int      @id @default(autoincrement())
  Comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int      @unique
  createdAt DateTime @default(now())
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}
